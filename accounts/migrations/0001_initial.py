# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-01 14:32
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='attivo')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Cognome')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Maschio'), ('female', 'Femmina'), ('other', 'Altro')], max_length=12, null=True, verbose_name='Genere')),
                ('short_description', models.CharField(blank=True, max_length=33, null=True, verbose_name='Descrizione breve')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar, foto')),
                ('bio', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Biografia, note')),
                ('location', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='Luogo di nascita')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data di nascita')),
                ('webpage_url', models.CharField(blank=True, max_length=512, null=True, verbose_name='Pagina web')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['username'],
                'verbose_name_plural': 'Utenti di sistema',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Note')),
                ('create_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['user', 'application'],
                'verbose_name_plural': 'Attività utenti',
            },
        ),
        migrations.CreateModel(
            name='UserActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='attivo')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('description', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Descrizione')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='skills_icons/', verbose_name='Skills icon')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Tipologie di attività utente',
            },
        ),
        migrations.CreateModel(
            name='UserSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, choices=[('0', '0'), ('10', '10'), ('20', '20'), ('30', '30'), ('40', '40'), ('50', '50'), ('60', '60'), ('70', '70'), ('80', '80'), ('90', '90'), ('100', '100')], max_length=3, null=True, verbose_name='Livello')),
                ('comments', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Commenti')),
                ('create_date', models.DateTimeField(auto_now=True)),
                ('change_date', models.DateTimeField(blank=True, null=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='changed_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'skill'],
                'verbose_name_plural': 'Skills, capacità degli utenti',
            },
        ),
        migrations.CreateModel(
            name='UserSkillType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='attivo')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('description', models.TextField(blank=True, max_length=512, null=True, verbose_name='Descrizione')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='skills_icons/', verbose_name='Skills icon')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': 'Skills',
            },
        ),
        migrations.CreateModel(
            name='UserUrlShortcut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=71, null=True, verbose_name='nome')),
                ('url', models.CharField(blank=True, max_length=1024, null=True, verbose_name='url')),
                ('is_active', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user', 'is_active'],
                'verbose_name_plural': 'Scorciatoie dashboard utenti',
            },
        ),
        migrations.AddField(
            model_name='userskill',
            name='skill',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.UserSkillType'),
        ),
        migrations.AddField(
            model_name='userskill',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_fk', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='activity_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.UserActivityType'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ua_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
